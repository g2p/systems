= Systems building

An extensible language for describing and configuring systems.

== Semantics

See my tomboy notes on puppet semantics, and more correct semantics

== Implementation

=== Transition collectors

Transition collectors, a way to realize transitions together.
Could be used to realize all package constraints in one aptitude call.
Detects incompatible constraints, and is faster.

Dependencies between collected items can be handled like so:
A, B, C packages, B depends on A.
Step 1: collector realizes {A, C}
Step 2: collector realizes {A, C, B}

== Tools

Find relevant libraries

=== Graphs

A graph data-structure

Candidates
* python-networkx
* http://code.google.com/p/python-graph/

Rejected
* kjbuckets
* boost bindings
* graphviz-based

=== Templating

Generating config files

Candidates (as of intrepid)
* python-jinja2
* python-ll-core ll.ul4c — http://www.livinglogic.de/Python/ul4c/Howto.html

Rejected due to trusted templates (arbitrary reason to cull the list):
* python-empy
* python-ll-core ll.xpit
* python-mako
* python-tempita — http://pythonpaste.org/tempita/

Rejected due to lack of expressiveness (no tests):
* string.Template — http://docs.python.org/library/string.html#template-strings

Rejected
* python-cheetah (mostly html-centric)
* python-jinja (superceded by python-jinja2)
* python-myghty (superceded by python-mako)
* python-nevow (html-centric)

=== Grammar

Parsing a DSL.

For now, a façade API in python is enough.

SDF may be worth investigating.
It is supported by the environments ASF+SDF and StrategoXT.

PyMeta would also work and is simple.
TXL and PyMeta allow mixing syntax and semantics.

=== Extensibility

Extend the path at runtime.
* runpy

=== Serialisation

A cheaper alternative to a grammar.
* python-yaml

=== Miscellany

Type traits
* python-enthought-traits

== Snippets

=== Deploying

# Package not deployed locally as that would interfere with testing.
debuild --no-tgz-check -us -uc -i -I && scp ../python-systems_0.1_all.deb tefal.local: && ssh -t tefal.local 'sudo dpkg -i python-systems_0.1_all.deb'

=== List imports

git grep -h -w -e import --and --not -e systems |sort -u

=== Coverage

# dropdb db-pfuuit; dropuser user-pfuuit; sudo sh -c "deluser git; rm -rf /tmp/testfile /tmp/django-queue-service /var/git; PYTHONPATH=lib python-coverage -x test/test_building.py; PYTHONPATH=lib python-coverage -x test/test_building.py; chown $USER: .coverage"; find lib -name \*.py -print0 |xargs -0 python-coverage -a

=== Lint

pyflakes lib/systems
PYTHONPATH=lib pylint --rcfile extra/pylintrc systems

=== Troubleshooting

==== Python tracing
sudo PYTHONPATH=lib python -u -m trace --trace --ignore-dir /usr:/var test/test_building.py

==== Syscall tracing
sudo PYTHONPATH=lib strace -fF -etrace=process,file,write -ostrace python test/test_building.py; sed -i '/stat/d' strace

